{"version":3,"sources":["App.js","index.js"],"names":["App","props","index","quotes","state","author","quote","displayQuote","bind","this","loadQuotes","body","setState","length","fetch","method","headers","Authorization","catch","error","console","data","json","text","className","id","TwitterShareButton","url","title","TwitterIcon","size","round","TumblrShareButton","caption","tags","TumblrIcon","Style","href","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0RAoGeA,G,kBApFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAPRC,MAAQ,EAMW,EALnBC,OAAS,GAKU,EAJnBC,MAAQ,CACNC,OAAQ,GACRC,MAAO,IAIP,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,yMAKXC,KAAKC,a,OACXD,KAAKF,e,gQAG2BE,KAAKN,OAAOM,KAAKP,OAAzCG,E,EAAAA,OAAcC,E,EAANK,KAChBF,KAAKG,SAAS,CACZP,SACAC,UAGFG,KAAKP,MAAQO,KAAKP,MAAQ,IACtBO,KAAKP,OAASO,KAAKN,OAAOU,Q,gCACtBJ,KAAKC,a,OACXD,KAAKP,MAAQ,E,2PAIE,+BACC,+C,SACDY,MAFA,+BAEgB,CAC/BC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cALc,kDAOfC,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,yBAA0BA,K,cANtDE,E,gBAOSA,EAAKC,O,OAAlBD,E,OACAZ,KAAKN,OAASkB,EAAKlB,O,mIAEX,IAAD,EACmBM,KAAKL,MAAvBC,EADD,EACCA,OAAQC,EADT,EACSA,MAChB,IAAKA,EACH,OAAO,mDAET,IAAMiB,EAAI,UAAM,IAAMjB,EAAQ,KAAOD,GAErC,OACE,yBAAKmB,UAAU,MAAMC,GAAG,aACtB,yBAAKA,GAAG,QACN,0BAAMD,UAAU,cAAhB,KACClB,EACD,0BAAMkB,UAAU,cAAhB,MAEF,yBAAKC,GAAG,UAAUpB,GAClB,yBAAKoB,GAAG,WACN,yBAAKA,GAAG,gBACN,kBAACC,EAAA,EAAD,CACEC,IAAK,oBACLC,MAAOL,EACPC,UAAU,kBAEV,kBAACK,EAAA,EAAD,CAAaC,KAhBN,GAgBsBC,OAAK,KAEpC,kBAACC,EAAA,EAAD,CACEL,IAAK,oBACLC,MAAO,mBACPK,QAASV,EACTC,UAAU,gBACVU,KAAM,CAAC,WAEP,kBAACC,EAAA,EAAD,CAAYL,KAzBL,GAyBqBC,OAAK,KAEnC,uBACEK,MAAM,iBACNC,KAAK,mCACLZ,GAAG,eAHL,kCAQF,4BAAQA,GAAG,YAAYa,QAAS7B,KAAKF,cAArC,mB,GAlFQgC,IAAMC,YCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8132d2c8.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  TwitterShareButton,\n  TumblrShareButton,\n  TwitterIcon,\n  TumblrIcon,\n} from 'react-share'\nimport './App.css'\n\nclass App extends React.Component {\n  index = 0\n  quotes = []\n  state = {\n    author: '',\n    quote: '',\n  }\n  constructor(props) {\n    super(props)\n    this.displayQuote = this.displayQuote.bind(this)\n  }\n  async componentDidMount() {\n    await this.loadQuotes()\n    this.displayQuote()\n  }\n  async displayQuote() {\n    const { author, body: quote } = this.quotes[this.index]\n    this.setState({\n      author,\n      quote,\n    })\n\n    this.index = this.index + 1\n    if (this.index >= this.quotes.length) {\n      await this.loadQuotes()\n      this.index = 0\n    }\n  }\n  async loadQuotes() {\n    const quoteURL = 'https://favqs.com/api/quotes'\n    const accessKey = 'Token token=a7cdfe2bcd1b4cef333643b0498da614'\n    let data = await fetch(quoteURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: accessKey,\n      },\n    }).catch(error => console.error('Error loading quotes: ', error))\n    data = await data.json()\n    this.quotes = data.quotes\n  }\n  render() {\n    const { author, quote } = this.state\n    if (!quote) {\n      return <div>Loading Quotes ...</div>\n    }\n    const text = `${'\"' + quote + '\" ' + author}`\n    const iconSize = 36\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        <div id=\"text\">\n          <span className=\"quote-mark\">\"</span>\n          {quote}\n          <span className=\"quote-mark\">\"</span>\n        </div>\n        <div id=\"author\">{author}</div>\n        <div id=\"buttons\">\n          <div id=\"social-media\">\n            <TwitterShareButton\n              url={'https://favqs.com'}\n              title={text}\n              className=\"twitter-button\"\n            >\n              <TwitterIcon size={iconSize} round />\n            </TwitterShareButton>\n            <TumblrShareButton\n              url={'https://favqs.com'}\n              title={'Favourite Quotes'}\n              caption={text}\n              className=\"tumblr-button\"\n              tags={['quotes']}\n            >\n              <TumblrIcon size={iconSize} round />\n            </TumblrShareButton>\n            <a\n              Style=\"display: none;\"\n              href=\"https://twitter.com/intent/tweet\"\n              id=\"tweet-quote\"\n            >\n              Only needed to pass the tests\n            </a>\n          </div>\n          <button id=\"new-quote\" onClick={this.displayQuote}>\n            New Quote\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}